version: "3.9"

services:
  postgres:
    container_name: postgres
    image: postgres:16-alpine
    restart: always
    environment:
      - POSTGRES_USER=${DB_USER}
      - POSTGRES_PASSWORD=${DB_PASSWORD}
      - POSTGRES_DB=${DB_NAME}
    env_file:
      - .env
    ports:
      - "5432:5432"
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U ${DB_USER}" ]
      interval: 10s
      timeout: 5s
      retries: 5
    volumes:
      - pgdata:/var/lib/postgresql/data

  redis:
    image: redis:7-alpine
    restart: always
    ports:
      - "6379:6379"
    healthcheck:
      test: [ "CMD", "redis-cli", "ping" ]
      interval: 10s
      timeout: 5s
      retries: 5

  celery:
    container_name: celery
    build: .
    command: python -m celery -A src.services.celery_worker worker -l info
    depends_on:
      redis:
        condition: service_healthy
      postgres:
        condition: service_healthy

  fastapi:
    container_name: fastapi
    build: .
    command: python -m uvicorn src.main:app --host 0.0.0.0 --port 8000
    ports:
      - "8000:8000"
    depends_on:
      redis:
        condition: service_healthy
      postgres:
        condition: service_healthy
      celery:
        condition: service_started

volumes:
  pgdata:
